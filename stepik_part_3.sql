-- 3.1.2 Задание

--Вывести студентов, которые сдавали дисциплину «Основы баз данных», 
--указать дату попытки и результат. Информацию вывести по убыванию результатов тестирования.

select name_student, date_attempt, result
from attempt
join student using (student_id)
join subject using (subject_id)
where name_subject = 'Основы баз данных'
ORDER BY result DESC;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.3 Задание

--Вывести, сколько попыток сделали студенты по каждой дисциплине, 
--а также средний результат попыток, который округлить до 2 знаков после запятой. 
--Под результатом попытки понимается процент правильных ответов на вопросы теста, который занесен в столбец result.  
--В результат включить название дисциплины, а также вычисляемые столбцы Количество и Среднее. 
--Информацию вывести по убыванию средних результатов.

select name_subject, count(attempt_id) AS Количество, round(avg(result), 2) AS Среднее
from subject
left join attempt on subject.subject_id = attempt.subject_id
GROUP BY name_subject
ORDER BY Среднее DESC;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.4 Задание

--Вывести студентов (различных студентов), имеющих максимальные результаты попыток. 
--Информацию отсортировать в алфавитном порядке по фамилии студента.
--Максимальный результат не обязательно будет 100%, поэтому явно это значение в запросе не задавать.

select name_student, result
from attempt
join student using(student_id)
where result =
(select max(result) from attempt)
ORDER BY name_student;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.5 Задание

--Если студент совершал несколько попыток по одной и той же дисциплине, 
--то вывести разницу в днях между первой и последней попыткой. 
--В результат включить фамилию и имя студента, название дисциплины и вычисляемый столбец Интервал. 
--Информацию вывести по возрастанию разницы. Студентов, сделавших одну попытку по дисциплине, не учитывать. 

select name_student, name_subject, DATEDIFF(max(date_attempt),min(date_attempt)) AS Интервал
from attempt
join student using (student_id)
join subject using (subject_id)
group by student_id, subject_id
HAVING DATEDIFF(max(date_attempt),min(date_attempt)) >0
ORDER BY Интервал;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.6 Задание

--Студенты могут тестироваться по одной или нескольким дисциплинам (не обязательно по всем). 
--Вывести дисциплину и количество уникальных студентов (столбец назвать Количество), 
--которые по ней проходили тестирование . 
--Информацию отсортировать сначала по убыванию количества, а потом по названию дисциплины.
--В результат включить и дисциплины, тестирование по которым студенты еще не проходили, 
--в этом случае указать количество студентов 0.

select name_subject, count(distinct student_id) AS Количество
from subject s left join attempt a
on s.subject_id = a.subject_id
group by name_subject
order by Количество desc, name_subject;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.7 Задание

--Случайным образом отберите 3 вопроса по дисциплине «Основы баз данных». 
--В результат включите столбцы question_id и name_question.

select question_id, name_question from question
where subject_id =
(select subject_id from subject where name_subject = 'Основы баз данных')
ORDER BY RAND()
limit 3;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.8 Задание

--Вывести вопросы, которые были включены в тест для Семенова Ивана по дисциплине «Основы SQL» 2020-05-17  
--(значение attempt_id для этой попытки равно 7). 
--Указать, какой ответ дал студент и правильный он или нет (вывести Верно или Неверно). 
--В результат включить вопрос, ответ и вычисляемый столбец  Результат.

select q.name_question, a.name_answer, 
if (a.is_correct = 0, 'Неверно','Верно') AS Результат
from testing t
    join answer a on t.answer_id = a.answer_id
    join question q on t.question_id = q.question_id
where t.attempt_id = 7

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.9 Задание

--Посчитать результаты тестирования. 
--Результат попытки вычислить как количество правильных ответов, деленное на 3 
--(количество вопросов в каждой попытке) и умноженное на 100. 
--Результат округлить до двух знаков после запятой. Вывести фамилию студента, название предмета, дату и результат. 
--Последний столбец назвать Результат. Информацию отсортировать сначала по фамилии студента, 
--потом по убыванию даты попытки.

select st.name_student, su.name_subject, att.date_attempt, round(sum(an.is_correct)/3*100,2) AS Результат 
from testing t
    join attempt att on t.attempt_id = att.attempt_id
    join student st on att.student_id = st.student_id
    join subject su on att.subject_id = su.subject_id
    join answer an on t.answer_id = an.answer_id
group by st.name_student, su.name_subject, att.date_attempt
order by st.name_student, att.date_attempt desc;

-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-- 3.1.10 Задание

--Для каждого вопроса вывести процент успешных решений, 
--то есть отношение количества верных ответов к общему количеству ответов, 
--значение округлить до 2-х знаков после запятой. Также вывести название предмета, к которому относится вопрос, 
--и общее количество ответов на этот вопрос. В результат включить название дисциплины, вопросы по ней 
--(столбец назвать Вопрос), а также два вычисляемых столбца Всего_ответов и Успешность. 
--Информацию отсортировать сначала по названию дисциплины, потом по убыванию успешности, 
--а потом по тексту вопроса в алфавитном порядке.
--Поскольку тексты вопросов могут быть длинными, обрезать их 30 символов и добавить многоточие "...".

select name_subject, concat(left(name_question,30),'...') AS Вопрос, count(t.answer_id) AS Всего_ответов, round(sum(is_correct)/count(t.answer_id)*100,2) AS Успешность
from subject su
    join question q on su.subject_id = q.subject_id
    join testing t on q.question_id = t.question_id
    left join answer an on t.answer_id = an.answer_id
group by name_subject, name_question
order by name_subject, Успешность DESC, Вопрос